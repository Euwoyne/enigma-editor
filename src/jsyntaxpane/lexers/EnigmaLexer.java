/* The following code was generated by JFlex 1.6.0 */

/*
 * Copyright 2008 Ayman Al-Sairafi ayman.alsairafi@gmail.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License
 *       at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Based on "lua.flex" from the package "jsyntaxpane-0.9.5-b29" by Ayman Al-Sairafi
 *
 * Modifications by Dominik Lehmann:
 *   Modified 01/02/2015: Added Lua5 standard library functions and types
 *   Modified 01/02/2015: Adapted for use on an Enigma level file
 *   Modified 18/05/2015: Added resolver pattern
 */

package jsyntaxpane.lexers;

import jsyntaxpane.Token;
import jsyntaxpane.TokenType;
import jsyntaxpane.lexers.DefaultJFlexLexer;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.6.0
 * from the specification file <tt>src/jsyntaxpane/lexers/enigma.flex</tt>
 */
public final class EnigmaLexer extends DefaultJFlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int RES = 2;
  public static final int COMMENT = 4;
  public static final int LINECOMMENT = 6;
  public static final int BLOCKCOMMENT = 8;
  public static final int STRING2 = 10;
  public static final int STRING1 = 12;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6, 6
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\10\1\3\1\2\1\117\1\120\1\1\16\10\4\0\1\3\1\0"+
    "\1\21\1\107\1\7\1\107\1\0\1\20\1\112\1\113\1\107\1\106"+
    "\1\107\1\17\1\15\1\107\1\13\1\105\2\11\1\102\3\11\1\103"+
    "\1\11\1\107\1\107\1\111\1\5\1\111\2\0\1\63\1\12\1\55"+
    "\1\60\1\16\1\53\1\71\1\72\1\62\1\104\1\75\1\56\1\73"+
    "\1\54\1\52\1\61\1\100\1\70\1\57\1\64\1\74\1\65\1\76"+
    "\1\66\1\67\1\101\1\4\1\22\1\6\1\107\1\77\1\0\1\26"+
    "\1\23\1\35\1\43\1\25\1\33\1\45\1\42\1\32\1\7\1\27"+
    "\1\30\1\47\1\40\1\34\1\44\1\50\1\24\1\31\1\36\1\37"+
    "\1\46\1\41\1\14\1\51\1\116\1\114\1\0\1\115\1\110\6\10"+
    "\1\121\32\10\2\0\4\7\4\0\1\7\2\0\1\10\7\0\1\7"+
    "\4\0\1\7\5\0\27\7\1\0\37\7\1\0\u01ca\7\4\0\14\7"+
    "\16\0\5\7\7\0\1\7\1\0\1\7\21\0\160\10\5\7\1\0"+
    "\2\7\2\0\4\7\10\0\1\7\1\0\3\7\1\0\1\7\1\0"+
    "\24\7\1\0\123\7\1\0\213\7\1\0\5\10\2\0\236\7\11\0"+
    "\46\7\2\0\1\7\7\0\47\7\7\0\1\7\1\0\55\10\1\0"+
    "\1\10\1\0\2\10\1\0\2\10\1\0\1\10\10\0\33\7\5\0"+
    "\3\7\15\0\5\10\6\0\1\7\4\0\13\10\5\0\53\7\37\10"+
    "\4\0\2\7\1\10\143\7\1\0\1\7\10\10\1\0\6\10\2\7"+
    "\2\10\1\0\4\10\2\7\12\10\3\7\2\0\1\7\17\0\1\10"+
    "\1\7\1\10\36\7\33\10\2\0\131\7\13\10\1\7\16\0\12\10"+
    "\41\7\11\10\2\7\4\0\1\7\5\0\26\7\4\10\1\7\11\10"+
    "\1\7\3\10\1\7\5\10\22\0\31\7\3\10\104\0\1\7\1\0"+
    "\13\7\67\0\33\10\1\0\4\10\66\7\3\10\1\7\22\10\1\7"+
    "\7\10\12\7\2\10\2\0\12\10\1\0\7\7\1\0\7\7\1\0"+
    "\3\10\1\0\10\7\2\0\2\7\2\0\26\7\1\0\7\7\1\0"+
    "\1\7\3\0\4\7\2\0\1\10\1\7\7\10\2\0\2\10\2\0"+
    "\3\10\1\7\10\0\1\10\4\0\2\7\1\0\3\7\2\10\2\0"+
    "\12\10\4\7\7\0\1\7\5\0\3\10\1\0\6\7\4\0\2\7"+
    "\2\0\26\7\1\0\7\7\1\0\2\7\1\0\2\7\1\0\2\7"+
    "\2\0\1\10\1\0\5\10\4\0\2\10\2\0\3\10\3\0\1\10"+
    "\7\0\4\7\1\0\1\7\7\0\14\10\3\7\1\10\13\0\3\10"+
    "\1\0\11\7\1\0\3\7\1\0\26\7\1\0\7\7\1\0\2\7"+
    "\1\0\5\7\2\0\1\10\1\7\10\10\1\0\3\10\1\0\3\10"+
    "\2\0\1\7\17\0\2\7\2\10\2\0\12\10\1\0\1\7\17\0"+
    "\3\10\1\0\10\7\2\0\2\7\2\0\26\7\1\0\7\7\1\0"+
    "\2\7\1\0\5\7\2\0\1\10\1\7\7\10\2\0\2\10\2\0"+
    "\3\10\10\0\2\10\4\0\2\7\1\0\3\7\2\10\2\0\12\10"+
    "\1\0\1\7\20\0\1\10\1\7\1\0\6\7\3\0\3\7\1\0"+
    "\4\7\3\0\2\7\1\0\1\7\1\0\2\7\3\0\2\7\3\0"+
    "\3\7\3\0\14\7\4\0\5\10\3\0\3\10\1\0\4\10\2\0"+
    "\1\7\6\0\1\10\16\0\12\10\11\0\1\7\7\0\3\10\1\0"+
    "\10\7\1\0\3\7\1\0\27\7\1\0\12\7\1\0\5\7\3\0"+
    "\1\7\7\10\1\0\3\10\1\0\4\10\7\0\2\10\1\0\2\7"+
    "\6\0\2\7\2\10\2\0\12\10\22\0\2\10\1\0\10\7\1\0"+
    "\3\7\1\0\27\7\1\0\12\7\1\0\5\7\2\0\1\10\1\7"+
    "\7\10\1\0\3\10\1\0\4\10\7\0\2\10\7\0\1\7\1\0"+
    "\2\7\2\10\2\0\12\10\1\0\2\7\17\0\2\10\1\0\10\7"+
    "\1\0\3\7\1\0\51\7\2\0\1\7\7\10\1\0\3\10\1\0"+
    "\4\10\1\7\10\0\1\10\10\0\2\7\2\10\2\0\12\10\12\0"+
    "\6\7\2\0\2\10\1\0\22\7\3\0\30\7\1\0\11\7\1\0"+
    "\1\7\2\0\7\7\3\0\1\10\4\0\6\10\1\0\1\10\1\0"+
    "\10\10\22\0\2\10\15\0\60\7\1\10\2\7\7\10\4\0\10\7"+
    "\10\10\1\0\12\10\47\0\2\7\1\0\1\7\2\0\2\7\1\0"+
    "\1\7\2\0\1\7\6\0\4\7\1\0\7\7\1\0\3\7\1\0"+
    "\1\7\1\0\1\7\2\0\2\7\1\0\4\7\1\10\2\7\6\10"+
    "\1\0\2\10\1\7\2\0\5\7\1\0\1\7\1\0\6\10\2\0"+
    "\12\10\2\0\4\7\40\0\1\7\27\0\2\10\6\0\12\10\13\0"+
    "\1\10\1\0\1\10\1\0\1\10\4\0\2\10\10\7\1\0\44\7"+
    "\4\0\24\10\1\0\2\10\5\7\13\10\1\0\44\10\11\0\1\10"+
    "\71\0\53\7\24\10\1\7\12\10\6\0\6\7\4\10\4\7\3\10"+
    "\1\7\3\10\2\7\7\10\3\7\4\10\15\7\14\10\1\7\17\10"+
    "\2\0\46\7\1\0\1\7\5\0\1\7\2\0\53\7\1\0\u014d\7"+
    "\1\0\4\7\2\0\7\7\1\0\1\7\1\0\4\7\2\0\51\7"+
    "\1\0\4\7\2\0\41\7\1\0\4\7\2\0\7\7\1\0\1\7"+
    "\1\0\4\7\2\0\17\7\1\0\71\7\1\0\4\7\2\0\103\7"+
    "\2\0\3\10\40\0\20\7\20\0\125\7\14\0\u026c\7\2\0\21\7"+
    "\1\0\32\7\5\0\113\7\3\0\3\7\17\0\15\7\1\0\4\7"+
    "\3\10\13\0\22\7\3\10\13\0\22\7\2\10\14\0\15\7\1\0"+
    "\3\7\1\0\2\10\14\0\64\7\40\10\3\0\1\7\3\0\2\7"+
    "\1\10\2\0\12\10\41\0\3\10\2\0\12\10\6\0\130\7\10\0"+
    "\51\7\1\10\1\7\5\0\106\7\12\0\35\7\3\0\14\10\4\0"+
    "\14\10\12\0\12\10\36\7\2\0\5\7\13\0\54\7\4\0\21\10"+
    "\7\7\2\10\6\0\12\10\46\0\27\7\5\10\4\0\65\7\12\10"+
    "\1\0\35\10\2\0\13\10\6\0\12\10\15\0\1\7\130\0\5\10"+
    "\57\7\21\10\7\7\4\0\12\10\21\0\11\10\14\0\3\10\36\7"+
    "\15\10\2\7\12\10\54\7\16\10\14\0\44\7\24\10\10\0\12\10"+
    "\3\0\3\7\12\10\44\7\122\0\3\10\1\0\25\10\4\7\1\10"+
    "\4\7\3\10\2\7\11\0\300\7\47\10\25\0\4\10\u0116\7\2\0"+
    "\6\7\2\0\46\7\2\0\6\7\2\0\10\7\1\0\1\7\1\0"+
    "\1\7\1\0\1\7\1\0\37\7\2\0\65\7\1\0\7\7\1\0"+
    "\1\7\3\0\3\7\1\0\7\7\3\0\4\7\2\0\6\7\4\0"+
    "\15\7\5\0\3\7\1\0\7\7\16\0\5\10\30\0\1\117\1\117"+
    "\5\10\20\0\2\7\23\0\1\7\13\0\5\10\5\0\6\10\1\0"+
    "\1\7\15\0\1\7\20\0\15\7\3\0\33\7\25\0\15\10\4\0"+
    "\1\10\3\0\14\10\21\0\1\7\4\0\1\7\2\0\12\7\1\0"+
    "\1\7\3\0\5\7\6\0\1\7\1\0\1\7\1\0\1\7\1\0"+
    "\4\7\1\0\13\7\2\0\4\7\5\0\5\7\4\0\1\7\21\0"+
    "\51\7\u0a77\0\57\7\1\0\57\7\1\0\205\7\6\0\4\7\3\10"+
    "\2\7\14\0\46\7\1\0\1\7\5\0\1\7\2\0\70\7\7\0"+
    "\1\7\17\0\1\10\27\7\11\0\7\7\1\0\7\7\1\0\7\7"+
    "\1\0\7\7\1\0\7\7\1\0\7\7\1\0\7\7\1\0\7\7"+
    "\1\0\40\10\57\0\1\7\u01d5\0\3\7\31\0\11\7\6\10\1\0"+
    "\5\7\2\0\5\7\4\0\126\7\2\0\2\10\2\0\3\7\1\0"+
    "\132\7\1\0\4\7\5\0\51\7\3\0\136\7\21\0\33\7\65\0"+
    "\20\7\u0200\0\u19b6\7\112\0\u51cd\7\63\0\u048d\7\103\0\56\7\2\0"+
    "\u010d\7\3\0\20\7\12\10\2\7\24\0\57\7\1\10\4\0\12\10"+
    "\1\0\31\7\7\0\1\10\120\7\2\10\45\0\11\7\2\0\147\7"+
    "\2\0\4\7\1\0\4\7\14\0\13\7\115\0\12\7\1\10\3\7"+
    "\1\10\4\7\1\10\27\7\5\10\20\0\1\7\7\0\64\7\14\0"+
    "\2\10\62\7\21\10\13\0\12\10\6\0\22\10\6\7\3\0\1\7"+
    "\4\0\12\10\34\7\10\10\2\0\27\7\15\10\14\0\35\7\3\0"+
    "\4\10\57\7\16\10\16\0\1\7\12\10\46\0\51\7\16\10\11\0"+
    "\3\7\1\10\10\7\2\10\2\0\12\10\6\0\27\7\3\0\1\7"+
    "\1\10\4\0\60\7\1\10\1\7\3\10\2\7\2\10\5\7\2\10"+
    "\1\7\1\10\1\7\30\0\3\7\2\0\13\7\5\10\2\0\3\7"+
    "\2\10\12\0\6\7\2\0\6\7\2\0\6\7\11\0\7\7\1\0"+
    "\7\7\221\0\43\7\10\10\1\0\2\10\2\0\12\10\6\0\u2ba4\7"+
    "\14\0\27\7\4\0\61\7\u2104\0\u016e\7\2\0\152\7\46\0\7\7"+
    "\14\0\5\7\5\0\1\7\1\10\12\7\1\0\15\7\1\0\5\7"+
    "\1\0\1\7\1\0\2\7\1\0\2\7\1\0\154\7\41\0\u016b\7"+
    "\22\0\100\7\2\0\66\7\50\0\15\7\3\0\20\10\20\0\7\10"+
    "\14\0\2\7\30\0\3\7\31\0\1\7\6\0\5\7\1\0\207\7"+
    "\2\0\1\10\4\0\1\7\13\0\12\10\7\0\32\7\4\0\1\7"+
    "\1\0\32\7\13\0\131\7\3\0\6\7\2\0\6\7\2\0\6\7"+
    "\2\0\3\7\3\0\2\7\3\0\2\7\22\0\3\10\4\0\14\7"+
    "\1\0\32\7\1\0\23\7\1\0\2\7\1\0\17\7\2\0\16\7"+
    "\42\0\173\7\105\0\65\7\210\0\1\10\202\0\35\7\3\0\61\7"+
    "\57\0\37\7\21\0\33\7\65\0\36\7\2\0\44\7\4\0\10\7"+
    "\1\0\5\7\52\0\236\7\2\0\12\10\u0356\0\6\7\2\0\1\7"+
    "\1\0\54\7\1\0\2\7\3\0\1\7\2\0\27\7\252\0\26\7"+
    "\12\0\32\7\106\0\70\7\6\0\2\7\100\0\1\7\3\10\1\0"+
    "\2\10\5\0\4\10\4\7\1\0\3\7\1\0\33\7\4\0\3\10"+
    "\4\0\1\10\40\0\35\7\203\0\66\7\12\0\26\7\12\0\23\7"+
    "\215\0\111\7\u03b7\0\3\10\65\7\17\10\37\0\12\10\20\0\3\10"+
    "\55\7\13\10\2\0\1\10\22\0\31\7\7\0\12\10\6\0\3\10"+
    "\44\7\16\10\1\0\12\10\100\0\3\10\60\7\16\10\4\7\13\0"+
    "\12\10\u04a6\0\53\7\15\10\10\0\12\10\u0936\0\u036f\7\221\0\143\7"+
    "\u0b9d\0\u042f\7\u33d1\0\u0239\7\u04c7\0\105\7\13\0\1\7\56\10\20\0"+
    "\4\10\15\7\u4060\0\2\7\u2163\0\5\10\3\0\26\10\2\0\7\10"+
    "\36\0\4\10\224\0\3\10\u01bb\0\125\7\1\0\107\7\1\0\2\7"+
    "\2\0\1\7\2\0\2\7\2\0\4\7\1\0\14\7\1\0\1\7"+
    "\1\0\7\7\1\0\101\7\1\0\4\7\2\0\10\7\1\0\7\7"+
    "\1\0\34\7\1\0\4\7\1\0\5\7\1\0\1\7\3\0\7\7"+
    "\1\0\u0154\7\2\0\31\7\1\0\31\7\1\0\37\7\1\0\31\7"+
    "\1\0\37\7\1\0\31\7\1\0\37\7\1\0\31\7\1\0\37\7"+
    "\1\0\31\7\1\0\10\7\2\0\62\10\u1600\0\4\7\1\0\33\7"+
    "\1\0\2\7\1\0\1\7\2\0\1\7\1\0\12\7\1\0\4\7"+
    "\1\0\1\7\1\0\1\7\6\0\1\7\4\0\1\7\1\0\1\7"+
    "\1\0\1\7\1\0\3\7\1\0\2\7\1\0\1\7\2\0\1\7"+
    "\1\0\1\7\1\0\1\7\1\0\1\7\1\0\1\7\1\0\2\7"+
    "\1\0\1\7\2\0\4\7\1\0\7\7\1\0\4\7\1\0\4\7"+
    "\1\0\1\7\1\0\12\7\1\0\21\7\5\0\3\7\1\0\5\7"+
    "\1\0\21\7\u1144\0\ua6d7\7\51\0\u1035\7\13\0\336\7\u3fe2\0\u021e\7"+
    "\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\u05ee\0"+
    "\1\10\36\0\140\10\200\0\360\10\uffff\0\uffff\0\ufe12\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\7\0\3\1\1\2\1\3\1\4\1\5\1\6\1\5"+
    "\1\6\1\5\1\3\1\7\1\3\1\10\1\11\24\5"+
    "\1\7\2\5\1\7\11\5\1\7\1\3\1\1\1\12"+
    "\1\13\1\14\1\15\2\16\1\17\2\20\1\17\1\21"+
    "\2\22\1\23\2\24\1\23\1\24\1\16\1\25\1\1"+
    "\1\24\1\26\1\27\1\0\1\6\1\0\3\5\1\0"+
    "\1\5\1\3\3\5\1\30\13\5\1\31\1\32\1\33"+
    "\1\31\16\5\1\31\2\5\1\34\11\5\1\7\5\5"+
    "\1\7\35\5\6\0\1\35\2\0\1\36\1\37\1\6"+
    "\1\0\4\5\1\6\3\5\1\40\6\5\1\41\27\5"+
    "\1\42\52\5\6\0\12\5\1\32\2\5\1\43\14\5"+
    "\1\34\1\43\2\5\1\44\40\5\6\0\21\5\1\45"+
    "\11\5\1\7\21\5\5\0\1\46\1\47\11\5\1\50"+
    "\44\5\3\0\40\5\1\0\14\5\1\7\12\5\1\0"+
    "\103\5";

  private static int [] zzUnpackAction() {
    int [] result = new int[569];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\122\0\244\0\366\0\u0148\0\u019a\0\u01ec\0\u023e"+
    "\0\u0290\0\u02e2\0\u0334\0\u0386\0\u023e\0\u03d8\0\u042a\0\u047c"+
    "\0\u04ce\0\u0520\0\u0572\0\u05c4\0\u0616\0\u023e\0\u023e\0\u0668"+
    "\0\u06ba\0\u070c\0\u075e\0\u07b0\0\u0802\0\u0854\0\u08a6\0\u08f8"+
    "\0\u094a\0\u099c\0\u09ee\0\u0a40\0\u0a92\0\u0ae4\0\u0b36\0\u0b88"+
    "\0\u0bda\0\u0c2c\0\u0c7e\0\u0cd0\0\u0d22\0\u0d74\0\u0dc6\0\u0e18"+
    "\0\u0e6a\0\u0ebc\0\u0f0e\0\u0f60\0\u0fb2\0\u1004\0\u1056\0\u10a8"+
    "\0\u10fa\0\u023e\0\u0386\0\u023e\0\u023e\0\u023e\0\u023e\0\u023e"+
    "\0\u114c\0\u023e\0\u119e\0\u023e\0\u11f0\0\u023e\0\u1242\0\u023e"+
    "\0\u023e\0\u1294\0\u023e\0\u12e6\0\u1338\0\u138a\0\u023e\0\u13dc"+
    "\0\u142e\0\u023e\0\u023e\0\u0334\0\u1480\0\u14d2\0\u1524\0\u1576"+
    "\0\u15c8\0\u161a\0\u166c\0\u16be\0\u1710\0\u1762\0\u17b4\0\u023e"+
    "\0\u1806\0\u1858\0\u18aa\0\u18fc\0\u194e\0\u19a0\0\u19f2\0\u1a44"+
    "\0\u1a96\0\u1ae8\0\u1b3a\0\u1b8c\0\u03d8\0\u03d8\0\u03d8\0\u1bde"+
    "\0\u1c30\0\u1c82\0\u1cd4\0\u1d26\0\u1d78\0\u1dca\0\u1e1c\0\u1e6e"+
    "\0\u1ec0\0\u1f12\0\u1f64\0\u1fb6\0\u2008\0\u205a\0\u20ac\0\u20fe"+
    "\0\u2150\0\u21a2\0\u21f4\0\u2246\0\u2298\0\u22ea\0\u233c\0\u238e"+
    "\0\u23e0\0\u2432\0\u03d8\0\u2484\0\u24d6\0\u2528\0\u257a\0\u25cc"+
    "\0\u261e\0\u2670\0\u26c2\0\u2714\0\u2766\0\u27b8\0\u280a\0\u285c"+
    "\0\u28ae\0\u2900\0\u2952\0\u29a4\0\u29f6\0\u2a48\0\u2a9a\0\u2aec"+
    "\0\u2b3e\0\u2b90\0\u2be2\0\u2c34\0\u2c86\0\u2cd8\0\u2d2a\0\u2d7c"+
    "\0\u2dce\0\u2e20\0\u2e72\0\u2ec4\0\u2f16\0\u2f68\0\u2fba\0\u300c"+
    "\0\u305e\0\u30b0\0\u3102\0\u3154\0\u023e\0\u11f0\0\u12e6\0\u023e"+
    "\0\u023e\0\u31a6\0\u31a6\0\u31f8\0\u324a\0\u329c\0\u32ee\0\u161a"+
    "\0\u3340\0\u3392\0\u33e4\0\u03d8\0\u3436\0\u3488\0\u34da\0\u352c"+
    "\0\u357e\0\u35d0\0\u03d8\0\u3622\0\u3674\0\u36c6\0\u3718\0\u376a"+
    "\0\u37bc\0\u380e\0\u3860\0\u38b2\0\u3904\0\u3956\0\u39a8\0\u39fa"+
    "\0\u3a4c\0\u3a9e\0\u3af0\0\u3b42\0\u3b94\0\u3be6\0\u3c38\0\u3c8a"+
    "\0\u3cdc\0\u3d2e\0\u03d8\0\u3d80\0\u3dd2\0\u3e24\0\u3e76\0\u3ec8"+
    "\0\u3f1a\0\u3f6c\0\u3fbe\0\u4010\0\u4062\0\u40b4\0\u4106\0\u4158"+
    "\0\u41aa\0\u41fc\0\u424e\0\u42a0\0\u42f2\0\u4344\0\u4396\0\u43e8"+
    "\0\u443a\0\u448c\0\u44de\0\u4530\0\u4582\0\u45d4\0\u4626\0\u4678"+
    "\0\u46ca\0\u471c\0\u476e\0\u47c0\0\u4812\0\u4864\0\u48b6\0\u4908"+
    "\0\u495a\0\u49ac\0\u49fe\0\u4a50\0\u4aa2\0\u4af4\0\u4b46\0\u4b98"+
    "\0\u4bea\0\u4c3c\0\u4c8e\0\u4ce0\0\u4d32\0\u4d84\0\u4dd6\0\u4e28"+
    "\0\u4e7a\0\u4ecc\0\u4f1e\0\u4f70\0\u4fc2\0\u5014\0\u5066\0\u50b8"+
    "\0\u510a\0\u515c\0\u51ae\0\u5200\0\u5252\0\u52a4\0\u52f6\0\u5348"+
    "\0\u539a\0\u53ec\0\u543e\0\u5490\0\u54e2\0\u03d8\0\u03d8\0\u5534"+
    "\0\u5586\0\u03d8\0\u55d8\0\u562a\0\u567c\0\u56ce\0\u5720\0\u5772"+
    "\0\u57c4\0\u5816\0\u5868\0\u58ba\0\u590c\0\u595e\0\u59b0\0\u5a02"+
    "\0\u5a54\0\u5aa6\0\u5af8\0\u5b4a\0\u5b9c\0\u5bee\0\u5c40\0\u5c92"+
    "\0\u5ce4\0\u5d36\0\u5d88\0\u5dda\0\u5e2c\0\u5e7e\0\u5ed0\0\u5f22"+
    "\0\u5f74\0\u5fc6\0\u6018\0\u606a\0\u60bc\0\u610e\0\u6160\0\u61b2"+
    "\0\u6204\0\u6256\0\u62a8\0\u62fa\0\u634c\0\u639e\0\u63f0\0\u6442"+
    "\0\u6494\0\u64e6\0\u6538\0\u658a\0\u65dc\0\u662e\0\u6680\0\u66d2"+
    "\0\u6724\0\u03d8\0\u6776\0\u67c8\0\u681a\0\u686c\0\u68be\0\u6910"+
    "\0\u6962\0\u69b4\0\u6a06\0\u6a58\0\u6aaa\0\u6afc\0\u6b4e\0\u6ba0"+
    "\0\u6bf2\0\u6c44\0\u6c96\0\u6ce8\0\u6d3a\0\u6d8c\0\u6dde\0\u6e30"+
    "\0\u6e82\0\u6ed4\0\u6f26\0\u6f78\0\u6fca\0\u701c\0\u706e\0\u70c0"+
    "\0\u7112\0\u7164\0\u023e\0\u03d8\0\u71b6\0\u7208\0\u725a\0\u72ac"+
    "\0\u72fe\0\u7350\0\u73a2\0\u73f4\0\u7446\0\u03d8\0\u7498\0\u74ea"+
    "\0\u753c\0\u758e\0\u75e0\0\u7632\0\u7684\0\u76d6\0\u7728\0\u777a"+
    "\0\u77cc\0\u781e\0\u7870\0\u78c2\0\u7914\0\u7966\0\u79b8\0\u7a0a"+
    "\0\u7a5c\0\u7aae\0\u7b00\0\u7b52\0\u7ba4\0\u7bf6\0\u7c48\0\u7c9a"+
    "\0\u7cec\0\u7d3e\0\u7d90\0\u7de2\0\u7e34\0\u7e86\0\u7ed8\0\u7f2a"+
    "\0\u7f7c\0\u7fce\0\u8020\0\u8072\0\u80c4\0\u8116\0\u8168\0\u81ba"+
    "\0\u820c\0\u825e\0\u82b0\0\u8302\0\u8354\0\u83a6\0\u83f8\0\u844a"+
    "\0\u849c\0\u84ee\0\u8540\0\u8592\0\u85e4\0\u8636\0\u8688\0\u86da"+
    "\0\u872c\0\u877e\0\u87d0\0\u8822\0\u8874\0\u88c6\0\u8918\0\u896a"+
    "\0\u89bc\0\u8a0e\0\u8a60\0\u8ab2\0\u8b04\0\u8b56\0\u8ba8\0\u8bfa"+
    "\0\u8c4c\0\u8c9e\0\u8cf0\0\u8d42\0\u8d94\0\u8de6\0\u8e38\0\u8e8a"+
    "\0\u8edc\0\u8f2e\0\u8f80\0\u8fd2\0\u9024\0\u9076\0\u90c8\0\u911a"+
    "\0\u916c\0\u91be\0\u9210\0\u9262\0\u92b4\0\u9306\0\u9358\0\u93aa"+
    "\0\u93fc\0\u944e\0\u94a0\0\u94f2\0\u9544\0\u9596\0\u95e8\0\u963a"+
    "\0\u968c\0\u96de\0\u9730\0\u9782\0\u97d4\0\u9826\0\u9878\0\u98ca"+
    "\0\u991c\0\u996e\0\u99c0\0\u9a12\0\u9a64\0\u9ab6\0\u9b08\0\u9b5a"+
    "\0\u9bac\0\u9bfe\0\u9c50\0\u9ca2\0\u9cf4\0\u9d46\0\u9d98\0\u9dea"+
    "\0\u9e3c\0\u9e8e\0\u9ee0\0\u9f32\0\u9f84\0\u9fd6\0\ua028\0\ua07a"+
    "\0\ua0cc\0\ua11e\0\ua170\0\ua1c2\0\ua214\0\ua266\0\ua2b8\0\ua30a"+
    "\0\ua35c\0\ua3ae\0\ua400\0\ua452\0\ua4a4\0\ua4f6\0\ua548\0\ua59a"+
    "\0\ua5ec\0\ua63e\0\ua690\0\ua6e2\0\ua734\0\ua786\0\ua7d8\0\ua82a"+
    "\0\ua87c";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[569];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\10\1\11\1\10\1\12\1\13\1\14\1\15\1\16"+
    "\1\10\1\17\1\20\1\21\1\22\1\23\1\24\1\25"+
    "\1\26\1\27\1\10\1\30\1\31\1\32\1\33\1\16"+
    "\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43"+
    "\1\44\1\45\1\16\1\46\1\47\1\50\1\16\1\51"+
    "\2\16\1\52\1\53\1\54\1\55\1\56\1\57\1\60"+
    "\1\61\1\62\1\63\1\16\1\64\1\16\1\65\1\66"+
    "\1\16\1\67\1\70\2\16\1\71\3\16\2\17\1\16"+
    "\1\17\2\72\1\73\1\14\1\74\1\75\1\76\1\77"+
    "\1\16\1\10\1\12\1\10\1\100\2\10\12\100\1\101"+
    "\101\100\3\10\1\102\1\103\1\104\1\102\1\105\112\102"+
    "\3\10\1\106\1\107\1\110\114\106\3\10\1\111\1\112"+
    "\1\113\3\111\1\114\110\111\3\10\1\115\1\116\1\100"+
    "\16\115\1\117\1\120\77\115\1\121\1\116\1\100\15\121"+
    "\1\122\1\121\1\120\77\121\124\0\1\10\122\0\1\12"+
    "\114\0\1\12\5\0\1\123\1\124\121\0\1\72\123\0"+
    "\6\16\1\0\1\16\4\0\63\16\10\0\1\16\2\0"+
    "\1\16\11\0\1\17\1\0\1\17\1\0\1\125\1\126"+
    "\6\0\1\126\54\0\2\17\1\0\1\17\23\0\6\16"+
    "\1\0\1\16\4\0\33\16\1\127\4\16\1\130\4\16"+
    "\1\131\15\16\10\0\1\16\2\0\1\16\11\0\1\17"+
    "\1\0\1\17\1\132\1\125\1\126\6\0\1\126\54\0"+
    "\2\17\1\0\1\17\23\0\6\16\1\0\1\16\4\0"+
    "\21\16\1\133\41\16\10\0\1\16\2\0\1\16\11\0"+
    "\1\125\1\0\1\125\1\0\1\134\64\0\2\125\1\0"+
    "\1\125\23\0\6\16\1\0\1\16\4\0\31\16\1\135"+
    "\2\16\1\135\3\16\1\136\7\16\1\137\12\16\10\0"+
    "\1\16\2\0\1\16\17\0\1\140\111\0\6\16\1\0"+
    "\1\16\4\0\1\16\1\141\61\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\2\16\1\142"+
    "\1\143\57\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\1\16\1\144\3\16\1\145\7\16"+
    "\1\146\45\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\6\16\1\147\3\16\1\150\2\16"+
    "\1\151\45\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\11\16\1\152\51\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\2\16"+
    "\1\153\10\16\1\154\47\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\10\16\1\155\1\156"+
    "\1\16\1\157\1\16\1\155\3\16\1\160\41\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\3\16\1\161\1\16\1\157\3\16\1\162\2\16\1\163"+
    "\46\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\1\16\1\155\4\16\1\156\54\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\11\16\1\164\51\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\1\16\1\165\1\16\1\166"+
    "\3\16\1\157\1\16\1\167\5\16\1\170\6\16\1\171"+
    "\34\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\15\16\1\172\45\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\2\16\1\173"+
    "\1\174\3\16\1\175\1\16\1\176\51\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\11\16"+
    "\1\157\5\16\1\177\43\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\2\16\1\200\6\16"+
    "\1\201\51\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\1\16\1\202\1\16\1\203\5\16"+
    "\1\157\1\204\50\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\1\16\1\205\1\206\7\16"+
    "\1\207\50\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\3\16\1\210\5\16\1\211\51\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\30\16\1\212\1\213\4\16\1\214\4\16\1\215"+
    "\17\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\27\16\1\216\3\16\1\217\15\16\1\220"+
    "\11\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\221\4\0\27\16\1\222\1\16\1\223\21\16\1\213"+
    "\7\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\27\16\1\224\2\16\1\225\1\226\5\16"+
    "\1\227\11\16\1\213\7\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\37\16\1\230\1\231"+
    "\22\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\213\4\0\27\16\1\232\3\16\1\233\1\223\1\16"+
    "\1\234\11\16\1\235\1\236\1\16\1\213\7\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\37\16\1\237\1\240\22\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\241\4\0\63\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\31\16"+
    "\1\242\3\16\1\243\25\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\32\16\1\244\16\16"+
    "\1\245\11\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\246\4\0\63\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\247\4\0\37\16\1\250\1\251"+
    "\22\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\40\16\1\252\22\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\27\16\1\253"+
    "\33\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\254\4\0\40\16\1\255\22\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\136\4\0\31\16\1\225"+
    "\2\16\1\225\12\16\1\256\13\16\10\0\1\16\2\0"+
    "\1\16\24\0\1\257\1\0\1\260\6\0\1\261\1\262"+
    "\5\0\1\263\2\0\1\264\54\0\1\104\123\0\1\265"+
    "\1\266\116\0\1\110\121\0\1\113\124\0\1\267\1\270"+
    "\113\0\1\115\2\0\16\115\2\0\77\115\2\0\1\100"+
    "\117\0\1\271\2\0\114\271\3\0\1\121\2\0\15\121"+
    "\1\0\1\121\1\0\77\121\11\0\1\125\1\0\1\125"+
    "\2\0\1\126\6\0\1\126\54\0\2\125\1\0\1\125"+
    "\25\0\1\272\1\0\1\272\3\0\1\273\62\0\2\272"+
    "\1\0\1\272\1\273\22\0\6\16\1\0\1\16\4\0"+
    "\40\16\1\274\10\16\1\135\11\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\32\16\1\275"+
    "\30\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\276\4\0\27\16\1\277\33\16\10\0\1\16\2\0"+
    "\1\16\11\0\3\300\2\0\1\300\4\0\1\300\1\0"+
    "\2\300\4\0\1\300\1\0\1\300\5\0\1\300\7\0"+
    "\1\300\1\0\1\300\2\0\1\300\2\0\1\300\16\0"+
    "\2\300\1\0\1\300\23\0\6\16\1\0\1\16\4\0"+
    "\12\16\1\204\50\16\10\0\1\16\2\0\1\16\15\0"+
    "\1\72\113\0\6\16\1\0\1\213\4\0\63\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\34\16\1\301\26\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\36\16\1\302\24\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\2\16\1\303\60\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\6\16\1\304\4\16\1\305"+
    "\5\16\1\306\3\16\1\307\35\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\16\16\1\310"+
    "\44\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\1\16\1\311\61\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\6\16\1\312"+
    "\54\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\20\16\1\313\42\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\6\16\1\314"+
    "\54\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\13\16\1\315\47\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\20\16\1\155"+
    "\42\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\3\16\1\316\6\16\1\317\50\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\5\16\1\320\5\16\1\321\47\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\1\16\1\322"+
    "\61\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\3\16\1\323\57\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\5\16\1\324"+
    "\55\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\1\16\1\155\61\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\15\16\1\325"+
    "\45\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\1\16\1\326\3\16\1\327\55\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\14\16\1\330\46\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\1\331\1\332\61\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\6\16\1\333\6\16\1\334\45\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\2\16\1\335"+
    "\60\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\21\16\1\336\41\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\13\16\1\337"+
    "\5\16\1\340\41\16\10\0\1\16\2\0\1\16\7\0"+
    "\5\16\1\341\1\0\1\16\4\0\63\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\24\16"+
    "\1\342\36\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\5\16\1\343\55\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\13\16"+
    "\1\155\47\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\7\16\1\344\53\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\1\345"+
    "\62\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\10\16\1\346\52\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\7\16\1\347"+
    "\53\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\7\16\1\350\2\16\1\351\50\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\3\16\1\352\57\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\21\16\1\157\41\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\13\16\1\321\47\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\7\16\1\353\53\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\13\16\1\354\47\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\20\16\1\355\42\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\30\16\1\213\32\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\250\4\0\63\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\44\16\1\356"+
    "\16\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\33\16\1\357\27\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\27\16\1\360"+
    "\33\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\33\16\1\361\27\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\37\16\1\362"+
    "\23\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\32\16\1\363\2\16\1\364\7\16\1\365"+
    "\15\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\213\4\0\53\16\1\213\7\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\37\16\1\366"+
    "\23\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\53\16\1\213\7\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\27\16\1\367"+
    "\33\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\45\16\1\370\15\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\46\16\1\371"+
    "\14\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\45\16\1\372\15\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\51\16\1\365"+
    "\11\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\40\16\1\373\22\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\27\16\1\374"+
    "\33\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\40\16\1\220\22\16\10\0\1\16\2\0"+
    "\1\16\7\0\3\16\1\375\2\16\1\0\1\16\4\0"+
    "\63\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\34\16\1\376\26\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\45\16\1\377"+
    "\15\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\45\16\1\u0100\15\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\35\16\1\u0101"+
    "\2\16\1\u0102\1\16\1\u0103\20\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\33\16\1\135"+
    "\27\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\41\16\1\u0104\21\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\41\16\1\u0105"+
    "\21\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\45\16\1\u0106\15\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\33\16\1\u0107"+
    "\27\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\31\16\1\213\31\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\31\16\1\u0108"+
    "\31\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\31\16\1\u0109\31\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\45\16\1\u010a"+
    "\15\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\35\16\1\u010b\25\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\36\16\1\u010c"+
    "\24\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\37\16\1\u010d\23\16\10\0\1\16\2\0"+
    "\1\16\26\0\1\u010e\132\0\1\u010f\116\0\1\u0110\111\0"+
    "\1\u0111\134\0\1\u0112\110\0\1\u0113\104\0\1\272\1\0"+
    "\1\272\66\0\2\272\1\0\1\272\23\0\6\16\1\0"+
    "\1\16\4\0\32\16\1\377\30\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\52\16\1\u0114"+
    "\10\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\40\16\1\u0115\22\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\52\16\1\214"+
    "\10\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\41\16\1\213\21\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\41\16\1\u0116"+
    "\21\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\3\16\1\u0117\57\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\14\16\1\u0118"+
    "\46\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\2\16\1\u0119\60\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\14\16\1\u011a"+
    "\46\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\2\16\1\u011b\3\16\1\u011c\13\16\1\u011c"+
    "\40\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\11\16\1\u011d\51\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\2\16\1\u011e"+
    "\60\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\2\16\1\u011f\60\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\7\16\1\u0120"+
    "\53\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\20\16\1\u0121\42\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\3\16\1\u0122"+
    "\57\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\2\16\1\u0123\60\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\10\16\1\u0124"+
    "\13\16\1\u0125\36\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\7\16\1\u0126\53\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\7\16\1\350\53\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\6\16\1\330\54\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\12\16\1\u0127\50\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\11\16\1\u0128\51\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\5\16\1\u0129\55\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\2\16\1\343\60\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\5\16\1\u012a\55\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\22\16\1\u012b\40\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\13\16\1\u012c\47\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\14\16\1\u012d\46\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\15\16\1\u012e\45\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\2\16\1\u012f\60\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\7\16\1\u0130\53\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\3\16\1\u0131\57\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\13\16\1\u012f\47\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\2\16\1\u0132\60\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\5\16\1\u0133\55\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\14\16\1\u0134\46\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\7\16\1\u0135\53\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\15\16\1\341\45\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\1\16\1\u0136\61\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\4\16\1\u0137\56\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\5\16\1\u0138\55\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\15\16\1\u0139\45\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\17\16\1\156\43\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\14\16\1\u013a\46\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\35\16\1\u013b\25\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\33\16\1\u013c\27\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\27\16\1\u013d\33\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\33\16\1\213\27\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\46\16\1\u013e\14\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\27\16\1\u013f\33\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\37\16\1\u0140\23\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\41\16\1\u0141\21\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\31\16\1\u0142\31\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\34\16\1\u0143\26\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\33\16\1\u0144\27\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\47\16\1\301\13\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\46\16\1\135\14\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\34\16\1\u0145\26\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\41\16\1\u0146\21\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\34\16\1\u0147\26\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\36\16\1\u0148\24\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\52\16\1\213\10\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\52\16\1\u0149\10\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\37\16\1\237\23\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\32\16\1\244\30\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\37\16\1\u014a\23\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\37\16\1\u014b\23\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\27\16\1\u014c\33\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\41\16\1\u014d\21\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\33\16\1\u014e\27\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\46\16\1\213\14\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\35\16\1\u014f\25\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\37\16\1\u0150\23\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\37\16\1\u0151\23\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\54\16\1\u0152\6\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\41\16\1\135\21\16\10\0"+
    "\1\16\2\0\1\16\40\0\1\u0153\117\0\1\u0154\132\0"+
    "\1\u0155\100\0\1\u0156\211\0\1\u0157\121\0\1\u0158\12\0"+
    "\6\16\1\0\1\16\4\0\34\16\1\u0159\26\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\52\16\1\u015a\10\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\44\16\1\213\16\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\4\16\1\155\56\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\1\16\1\u015b\61\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\3\16\1\u015c\57\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\7\16\1\u015d\53\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\25\16\1\u015e\35\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\2\16\1\341\60\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\1\16\1\u012f\61\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\7\16\1\u015f\53\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\1\16\1\341\61\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\11\16\1\u0160\51\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\5\16\1\u0161\1\333\1\16\1\346\52\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\5\16"+
    "\1\155\55\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\12\16\1\341\50\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\2\16"+
    "\1\u0162\60\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\2\16\1\u0163\60\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\15\16"+
    "\1\u0134\45\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\13\16\1\u0164\47\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\14\16"+
    "\1\u0165\46\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\2\16\1\u0166\60\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\2\16"+
    "\1\156\60\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\2\16\1\u0167\60\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\1\16"+
    "\1\u0168\61\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\24\16\1\u0169\36\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\5\16"+
    "\1\u016a\55\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\12\16\1\u016b\50\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\2\16"+
    "\1\155\60\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\22\16\1\156\40\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\5\16"+
    "\1\336\55\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\6\16\1\u012f\54\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\3\16"+
    "\1\u016c\57\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\5\16\1\u012f\55\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\10\16"+
    "\1\u016d\52\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\5\16\1\u016e\55\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\36\16"+
    "\1\u016f\15\16\1\u0170\6\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\27\16\1\u0171\33\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\35\16\1\u015a\25\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\47\16\1\u0172\13\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\33\16\1\u0173\27\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\45\16\1\213\15\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\47\16\1\u0174\13\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\54\16\1\u0175\6\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\u0176"+
    "\4\0\63\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\54\16\1\u0177\6\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\47\16"+
    "\1\213\13\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\54\16\1\u0178\6\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\27\16"+
    "\1\u0179\33\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\u017a\4\0\63\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\37\16\1\u017b\23\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\34\16\1\u017c\26\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\42\16\1\135\20\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\33\16\1\u017d\27\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\37\16\1\u017e\23\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\27\16\1\225\33\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\27\16\1\u017f\33\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\56\16\1\u0180\4\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\41\16\1\u0181\7\16"+
    "\1\u0182\11\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\30\16\1\u0183\6\16\1\u0184\5\16"+
    "\1\u0185\15\16\10\0\1\16\2\0\1\16\43\0\1\u0186"+
    "\112\0\1\u0187\131\0\1\u0188\107\0\1\u0189\205\0\1\u018a"+
    "\30\0\1\u018b\103\0\6\16\1\0\1\16\4\0\33\16"+
    "\1\233\27\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\37\16\1\251\23\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\15\16"+
    "\1\155\45\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\13\16\1\u018c\47\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\1\16"+
    "\1\336\61\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\14\16\1\u018d\46\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\10\16"+
    "\1\155\52\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\15\16\1\u0132\45\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\7\16"+
    "\1\u018e\53\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\15\16\1\u018f\45\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\13\16"+
    "\1\u0190\47\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\7\16\1\u0191\53\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\13\16"+
    "\1\u0192\47\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\12\16\1\u0193\50\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\13\16"+
    "\1\u0132\47\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\7\16\1\u0194\53\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\1\u0195"+
    "\62\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\4\16\1\u012f\56\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\22\16\1\u016e"+
    "\40\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\11\16\1\u012f\51\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\2\16\1\u0196"+
    "\60\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\40\16\1\364\22\16\10\0\1\16\2\0"+
    "\1\16\7\0\3\16\1\u0197\2\16\1\0\1\16\4\0"+
    "\27\16\1\u0198\1\u0199\1\16\1\u019a\3\16\1\u019b\1\16"+
    "\1\u019c\3\16\1\u019d\1\u0143\1\u019e\4\16\1\u019f\1\16"+
    "\1\u01a0\5\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\53\16\1\u01a1\7\16\10\0\1\16"+
    "\2\0\1\16\7\0\3\16\1\u01a2\2\16\1\0\1\16"+
    "\4\0\63\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\27\16\1\u0140\33\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\u01a3\4\0\53\16"+
    "\1\u01a4\7\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\37\16\1\u01a5\5\16\1\u01a6\15\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\35\16\1\213\25\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\31\16\1\u01a7\12\16"+
    "\1\u01a8\16\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\31\16\1\u01a9\1\16\1\u01aa\1\u01ab"+
    "\1\u01ac\2\16\1\u01ad\1\u01ae\5\16\1\u01af\13\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\37\16\1\u01b0\23\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\31\16\1\u01b1\31\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\31\16\1\u0176\31\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\37\16\1\u01b2\23\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\u01b3\4\0"+
    "\63\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\32\16\1\u01b4\30\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\50\16\1\u01b5"+
    "\12\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\27\16\1\u01b6\33\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\40\16\1\u01b7"+
    "\22\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\50\16\1\213\12\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\33\16\1\u01b8"+
    "\27\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\35\16\1\u01b9\25\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\27\16\1\u01ba"+
    "\33\16\10\0\1\16\2\0\1\16\34\0\1\u01bb\123\0"+
    "\1\u01bc\117\0\1\u01bd\125\0\1\u018b\111\0\1\u0158\100\0"+
    "\6\16\1\0\1\16\4\0\3\16\1\u0138\57\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\1\u012f\62\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\23\16\1\u012f\37\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\3\16"+
    "\1\u01be\57\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\11\16\1\335\51\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\7\16"+
    "\1\u01bf\53\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\13\16\1\u01c0\47\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\15\16"+
    "\1\u01c1\45\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\2\16\1\u011d\60\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\27\16"+
    "\1\u01c2\3\16\1\127\11\16\1\u01c3\15\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\45\16"+
    "\1\u01c4\15\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\40\16\1\u01c5\22\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\44\16"+
    "\1\u01c6\16\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\37\16\1\u01c7\11\16\1\u01c8\11\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\51\16\1\u01c9\11\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\247\4\0\63\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\45\16"+
    "\1\u01ca\15\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\47\16\1\256\13\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\51\16"+
    "\1\u0199\11\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\54\16\1\u01cb\6\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\27\16"+
    "\1\u01cc\33\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\40\16\1\136\22\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\136\4\0\63\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\46\16\1\u01cd\14\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\u01ce\4\0\63\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\27\16"+
    "\1\u01c7\33\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\37\16\1\u01cf\1\251\22\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\27\16\1\u01d0\33\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\37\16\1\u01d1\23\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\u01d2\4\0"+
    "\63\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\u01d3\4\0\63\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\32\16\1\u01d4\30\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\45\16\1\u01d5\15\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\27\16\1\247\33\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\33\16\1\u01d6\27\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\34\16\1\u01d7\26\16\10\0"+
    "\1\16\2\0\1\16\7\0\3\16\1\243\2\16\1\0"+
    "\1\16\4\0\63\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\31\16\1\u01d8\31\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\40\16\1\361\22\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\35\16\1\364\25\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\31\16\1\u01d9\31\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\41\16\1\u01da\21\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\37\16\1\u01db\23\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\u01dc\4\0\63\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\41\16\1\u01dd"+
    "\21\16\10\0\1\16\2\0\1\16\47\0\1\u018b\104\0"+
    "\1\u018a\120\0\1\u01de\77\0\6\16\1\0\1\16\4\0"+
    "\13\16\1\u01df\47\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\15\16\1\u016e\45\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\22\16\1\u01e0\40\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\22\16\1\u012f\40\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\33\16\1\u0176\27\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\27\16\1\u01e1\33\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\40\16\1\u01e2\22\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\52\16\1\135\10\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\40\16\1\250\22\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\31\16\1\135\31\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\45\16\1\u01e3\15\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\41\16\1\u01e4\21\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\214\4\0"+
    "\40\16\1\u0116\22\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\30\16\1\u01e5\1\u01e4\2\16"+
    "\1\u01e6\12\16\1\u01e7\13\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\45\16\1\u01e8\15\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\31\16\1\u01e9\31\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\61\16\1\u01ea\1\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\31\16\1\u01eb\31\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\41\16\1\u01ec\21\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\46\16\1\u01ed\14\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\31\16\1\u01ee\31\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\40\16\1\u01ef\22\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\41\16\1\u01f0\21\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\40\16\1\u01f1\22\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\54\16\1\u01f2\6\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\40\16\1\u01b2\22\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\46\16\1\u01ef\14\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\41\16\1\u01b4\21\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\37\16\1\u01f3\23\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\36\16\1\u01f4\24\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\31\16\1\301\31\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\54\16\1\u01f5\6\16\10\0\1\16\2\0\1\16"+
    "\25\0\1\u01f6\103\0\6\16\1\0\1\16\4\0\3\16"+
    "\1\u01f7\57\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\3\16\1\u01f8\57\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\53\16"+
    "\1\250\7\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\31\16\1\372\31\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\36\16"+
    "\1\243\24\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\27\16\1\213\33\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\33\16"+
    "\1\u01f9\15\16\1\u01fa\11\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\32\16\1\u01fb\30\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\40\16\1\u01fc\22\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\34\16\1\u01fd\26\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\27\16\1\u01fe\33\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\u01ff\4\0\63\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\44\16"+
    "\1\u0200\16\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\47\16\1\u015a\13\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\47\16"+
    "\1\u0201\13\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\34\16\1\u0173\26\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\41\16"+
    "\1\u0145\21\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\27\16\1\u0202\33\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\36\16"+
    "\1\213\24\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\40\16\1\u0203\12\16\1\u0204\7\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\27\16\1\u0205\33\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\54\16\1\u0206\6\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\32\16\1\u0207\27\16\1\u0208\10\0\1\16\2\0"+
    "\1\16\24\0\1\u018b\104\0\6\16\1\0\1\16\4\0"+
    "\1\u0135\62\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\1\16\1\u0209\61\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\37\16"+
    "\1\u01f1\23\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\33\16\1\u020a\27\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\45\16"+
    "\1\u020b\15\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\33\16\1\u020c\27\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\54\16"+
    "\1\u020d\6\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\45\16\1\135\15\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\32\16"+
    "\1\301\30\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\40\16\1\251\22\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\41\16"+
    "\1\u020e\21\16\10\0\1\16\2\0\1\16\7\0\6\16"+
    "\1\0\1\16\4\0\45\16\1\u020f\15\16\10\0\1\16"+
    "\2\0\1\16\7\0\3\16\1\u0210\2\16\1\0\1\16"+
    "\4\0\51\16\1\u01c9\11\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\40\16\1\u0211\22\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\31\16\1\u0212\31\16\10\0\1\16\2\0\1\16"+
    "\7\0\3\16\1\u0213\2\16\1\0\1\16\4\0\34\16"+
    "\1\u0159\5\16\1\64\4\16\1\67\13\16\10\0\1\16"+
    "\2\0\1\16\7\0\6\16\1\0\1\16\4\0\32\16"+
    "\1\225\20\16\1\213\7\16\10\0\1\16\2\0\1\16"+
    "\7\0\6\16\1\0\1\16\4\0\60\16\1\u0214\2\16"+
    "\10\0\1\16\2\0\1\16\7\0\6\16\1\0\1\16"+
    "\4\0\1\u0215\62\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\33\16\1\u0216\27\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\27\16\1\220\33\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\30\16\1\u0216\32\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\32\16\1\u0217\24\16\2\213\2\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\36\16\1\u0218"+
    "\24\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\37\16\1\u0219\23\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\44\16\1\u021a"+
    "\16\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\41\16\1\u021b\21\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\54\16\1\u021c"+
    "\6\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\40\16\1\130\22\16\10\0\1\16\2\0"+
    "\1\16\7\0\4\16\1\213\1\16\1\0\1\16\4\0"+
    "\63\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\3\16\1\u021d\57\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\34\16\1\u021e"+
    "\26\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\47\16\1\u021f\13\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\40\16\1\u0220"+
    "\22\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\50\16\1\u0221\12\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\34\16\1\u0222"+
    "\26\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\u0140\4\0\63\16\10\0\1\16\2\0\1\16\7\0"+
    "\3\16\1\u0223\2\16\1\0\1\16\4\0\32\16\1\u0224"+
    "\2\16\1\u01b9\4\16\1\u0225\4\16\1\u0226\13\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\22\16\1\336\40\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\32\16\1\u0227\30\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\u021a\4\0"+
    "\63\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\34\16\1\u0228\26\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\36\16\1\u0229"+
    "\24\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\34\16\1\213\26\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\51\16\1\u022a"+
    "\11\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\40\16\1\u022b\22\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\27\16\1\u022c"+
    "\33\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\27\16\1\247\7\16\1\220\23\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\45\16\1\u022d\15\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\34\16\1\u022e\26\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\51\16\1\u022f\11\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\50\16\1\u01f1\12\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\33\16\1\u0230\27\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\33\16\1\u0231\27\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\214\4\0"+
    "\63\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\u0232\4\0\63\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\33\16\1\u0233\27\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\35\16\1\u0234\25\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\32\16\1\u0235\30\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\16\4\0"+
    "\31\16\1\u0236\31\16\10\0\1\16\2\0\1\16\7\0"+
    "\6\16\1\0\1\16\4\0\34\16\1\135\26\16\10\0"+
    "\1\16\2\0\1\16\7\0\6\16\1\0\1\u0237\4\0"+
    "\63\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\40\16\1\u0238\22\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\46\16\1\u021b"+
    "\14\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\45\16\1\u0239\15\16\10\0\1\16\2\0"+
    "\1\16\7\0\6\16\1\0\1\16\4\0\31\16\1\u01e4"+
    "\31\16\10\0\1\16\2\0\1\16\7\0\6\16\1\0"+
    "\1\16\4\0\40\16\1\213\22\16\10\0\1\16\2\0"+
    "\1\16";

  private static int [] zzUnpackTrans() {
    int [] result = new int[43214];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\7\0\1\11\4\1\1\11\10\1\2\11\42\1\1\11"+
    "\1\1\5\11\1\1\1\11\1\1\1\11\1\1\1\11"+
    "\1\1\2\11\1\1\1\11\3\1\1\11\2\1\2\11"+
    "\1\0\1\1\1\0\3\1\1\0\5\1\1\11\116\1"+
    "\6\0\1\11\2\0\2\11\1\1\1\0\122\1\6\0"+
    "\77\1\6\0\55\1\5\0\1\11\57\1\3\0\40\1"+
    "\1\0\27\1\1\0\103\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[569];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    public EnigmaLexer() {
        super();
    }

    @Override
    public int yychar() {
        return yychar;
    }

    private static final byte PAREN       = 1;
    private static final byte BRACKET     = 2;
    private static final byte BRACE       = 3;
    private static final byte ENDBLOCK    = 4;
    private static final byte REPEATBLOCK = 5;

	TokenType commentType;
    int       startLength;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public EnigmaLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 2920) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;           
    int totalRead = 0;
    while (totalRead < requested) {
      int numRead = zzReader.read(zzBuffer, zzEndRead + totalRead, requested - totalRead);
      if (numRead == -1) {
        break;
      }
      totalRead += numRead;
    }

    if (totalRead > 0) {
      zzEndRead += totalRead;
      if (totalRead == requested) { /* possibly more input available */
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      return false;
    }

    // totalRead = 0: End of stream
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtEOF  = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yychar = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Token yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 1: 
          { 
          }
        case 41: break;
        case 2: 
          { return token(TokenType.OPERATOR,  BRACKET);
          }
        case 42: break;
        case 3: 
          { return token(TokenType.OPERATOR);
          }
        case 43: break;
        case 4: 
          { return token(TokenType.OPERATOR, -BRACKET);
          }
        case 44: break;
        case 5: 
          { return token(TokenType.IDENTIFIER);
          }
        case 45: break;
        case 6: 
          { return token(TokenType.NUMBER);
          }
        case 46: break;
        case 7: 
          { return token(TokenType.REGEX2);
          }
        case 47: break;
        case 8: 
          { yybegin(STRING1);
                        tokenStart = yychar;
                        tokenLength = 1;
          }
        case 48: break;
        case 9: 
          { yybegin(STRING2);
                        tokenStart = yychar; 
                        tokenLength = 1;
          }
        case 49: break;
        case 10: 
          { return token(TokenType.OPERATOR,  PAREN);
          }
        case 50: break;
        case 11: 
          { return token(TokenType.OPERATOR, -PAREN);
          }
        case 51: break;
        case 12: 
          { return token(TokenType.OPERATOR,  BRACE);
          }
        case 52: break;
        case 13: 
          { return token(TokenType.OPERATOR, -BRACE);
          }
        case 53: break;
        case 14: 
          { yybegin(YYINITIAL);
          }
        case 54: break;
        case 15: 
          { yybegin(LINECOMMENT);
                            tokenLength += yylength();
          }
        case 55: break;
        case 16: 
          { yybegin(YYINITIAL);
                            return token(TokenType.COMMENT, tokenStart, tokenLength);
          }
        case 56: break;
        case 17: 
          { tokenLength++;
          }
        case 57: break;
        case 18: 
          { yybegin(YYINITIAL);
                            tokenLength += yylength();
                            return token(TokenType.COMMENT, tokenStart, tokenLength);
          }
        case 58: break;
        case 19: 
          { ++tokenLength;
          }
        case 59: break;
        case 20: 
          { tokenLength += yylength();
          }
        case 60: break;
        case 21: 
          { yybegin(YYINITIAL); 
                            return token(TokenType.STRING, tokenStart, tokenLength + 1);
          }
        case 61: break;
        case 22: 
          { yybegin(YYINITIAL);
                            return token(TokenType.STRING, tokenStart, tokenLength + 1);
          }
        case 62: break;
        case 23: 
          { yybegin(BLOCKCOMMENT);
                        commentType = TokenType.COMMENT2;
                        tokenStart  = yychar;
                        tokenLength = yylength();
                        startLength = tokenLength;
          }
        case 63: break;
        case 24: 
          { yybegin(COMMENT);
                        tokenStart  = yychar;
                        tokenLength = yylength();
          }
        case 64: break;
        case 25: 
          { return token(TokenType.DELIMITER);
          }
        case 65: break;
        case 26: 
          { return token(TokenType.KEYWORD);
          }
        case 66: break;
        case 27: 
          { return token(TokenType.TYPE2);
          }
        case 67: break;
        case 28: 
          { return token(TokenType.KEYWORD,  ENDBLOCK);
          }
        case 68: break;
        case 29: 
          { yybegin(BLOCKCOMMENT);
                            commentType = TokenType.COMMENT2;
                            tokenLength += yylength();
                            startLength = yylength();
          }
        case 69: break;
        case 30: 
          { if (startLength == yylength())
                            {
                                tokenLength += yylength();
                                yybegin(YYINITIAL);
                                return token(commentType, tokenStart, tokenLength);
                            }
                            else
                            {
                                tokenLength++;
                                yypushback(yylength() - 1);
                            }
          }
        case 70: break;
        case 31: 
          { tokenLength += 2;
          }
        case 71: break;
        case 32: 
          { yybegin(RES); return token(TokenType.DELIMITER);
          }
        case 72: break;
        case 33: 
          { return token(TokenType.KEYWORD, -ENDBLOCK);
          }
        case 73: break;
        case 34: 
          { return token(TokenType.TYPE);
          }
        case 74: break;
        case 35: 
          { return token(TokenType.KEYWORD2);
          }
        case 75: break;
        case 36: 
          { return token(TokenType.REGEX);
          }
        case 76: break;
        case 37: 
          { return token(TokenType.KEYWORD, -REPEATBLOCK);
          }
        case 77: break;
        case 38: 
          { yybegin(YYINITIAL); return token(TokenType.REGEX);
          }
        case 78: break;
        case 39: 
          { return token(TokenType.KEYWORD,  REPEATBLOCK);
          }
        case 79: break;
        case 40: 
          { return token(TokenType.TYPE3);
          }
        case 80: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            switch (zzLexicalState) {
            case COMMENT: {
              yybegin(YYINITIAL);
                            return token(TokenType.COMMENT, tokenStart, tokenLength);
            }
            case 570: break;
            case LINECOMMENT: {
              yybegin(YYINITIAL);
                            return token(TokenType.COMMENT, tokenStart, tokenLength);
            }
            case 571: break;
            case BLOCKCOMMENT: {
              yybegin(YYINITIAL);
                            return token(commentType, tokenStart, tokenLength);
            }
            case 572: break;
            case STRING2: {
              yybegin(YYINITIAL);
                            return token(TokenType.STRING, tokenStart, tokenLength);
            }
            case 573: break;
            case STRING1: {
              yybegin(YYINITIAL);
                            return token(TokenType.STRING, tokenStart, tokenLength);
            }
            case 574: break;
            default:
              {
                return null;
              }
            }
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
